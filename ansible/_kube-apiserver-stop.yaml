---
  - hosts: master
    any_errors_fatal: true
    name: "{{ play_name | default('Stop Kubernetes API Server') }}"
    remote_user: root
    become_method: sudo
    vars_files:
      - group_vars/all.yaml

    tasks:
      # pre KET 1.3 clusters
      - name: check if kube-apiserver service is active
        command: systemctl is-active -q kube-apiserver.service
        register: status
        failed_when: status.rc !=0 and status.rc != 3 # 0 = running. 3 = stopped/doesn't exist

      - name: stop kube-apiserver service if running
        service:
          name: kube-apiserver.service
          state: stopped
          enabled: no
        when: status is defined and status.rc == 0 # only stop if it's running

      # post KET 1.3 clusters
      - name: create backup static pod manifests directory
        file:
          path: "{{ kubelet_pod_manifests_backup_dir }}"
          state: directory
          mode: 0700
      - name: determine if kube-apiserver.yaml manifest exists
        stat:
          path: "{{ kubelet_pod_manifests_dir }}/kube-apiserver.yaml"
        register: pod_stat
      - name: move kube-apiserver.yaml manifest if present
        shell: cp {{ kubelet_pod_manifests_dir }}/kube-apiserver.yaml {{ kubelet_pod_manifests_backup_dir }}/kube-apiserver.yaml && rm -f {{ kubelet_pod_manifests_dir }}/kube-apiserver.yaml
        when: pod_stat is defined and pod_stat.stat.exists
      - name: wait until kube-apiserver is stopped
        wait_for:
          port: "{{ kubernetes_master_insecure_port }}"
          state: stopped
          delay: 1
          timeout: 30
