---
  # setup directories
  - name: create {{ docker_install_dir }}
    file:
      path: "{{ docker_install_dir }}"
      state: directory
  # copy certificates
  - name: copy {{ docker_certificates_cert_file_name }}
    copy:
      src: "{{ tls_directory }}/docker.pem"
      dest: "{{ docker_certificates_cert_path }}"
      owner: "{{ docker_certificates_owner }}"
      group: "{{ docker_certificates_group }}"
      mode: "{{ docker_certificate_mode }}"
  - name: copy {{ docker_certificates_key_file_name }}
    copy:
      src: "{{ tls_directory }}/docker-key.pem"
      dest: "{{ docker_certificates_key_path }}"
      owner: "{{ docker_certificates_owner }}"
      group: "{{ docker_certificates_group }}"
      mode: "{{ docker_certificate_mode }}"
  - name: restart docker service
    service:
      name: "docker"
      state: restarted
      enabled: yes

  # Setup Docker Registry
  - name: verify if docker registry container is running
    shell: docker ps | grep registry
    register: docker_ps_registry
    ignore_errors: yes # dont fail, next task will start it if not running
    changed_when: false

  - name: load docker registry from file
    command: docker load --input /opt/images/registry.tar
    when: docker_ps_registry|failed and disconnected_installation|bool == true # default to Dockerhub unless disconnected_installation == true

  - name: start docker registry container
    command: docker run -d -p {{ docker_registry_port }}:5000 --restart=always --name registry -v {{docker_install_dir}}:/certs -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/{{docker_certificates_cert_file_name}} -e REGISTRY_HTTP_TLS_KEY=/certs/{{docker_certificates_key_file_name}} registry:{{ docker_registry_version }}
    when: docker_ps_registry|failed
