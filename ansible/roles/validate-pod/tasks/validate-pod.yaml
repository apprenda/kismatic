---
    # kubeconfig is required becuase this task can be triggered from any k8s node
  - name: wait until {{ item }} pod has the desired version
    command: kubectl get pods {{ item }} --namespace kube-system -o jsonpath='{.metadata.annotations.kismatic/version}' --kubeconfig {{ kubernetes_kubeconfig_path }}
    register: podVersion
    until: podVersion.stdout == kismatic_short_version
    retries: 20
    delay: 6

  - name: wait until {{ item }} pod is running
    command: kubectl get pods {{ item }} --namespace kube-system --kubeconfig {{ kubernetes_kubeconfig_path }}
    register: phase
    until: phase|success and "Running" in phase.stdout
    retries: 20
    delay: 6
    failed_when: false # We don't want this task to actually fail (We catch the failure with a custom msg in the next task)

  - name: get docker container ID for {{ item }}
    command: docker ps -a -f name={{ item }} --format {%raw%}"{{.ID}}"{%endraw%} -l
    register: containerID
    when: phase|failure or "Running" not in phase.stdout

    #failed_when: true to always print stderr and stdout
  - name: get docker logs for {{ item }}
    command: docker logs {{ container_ID.stdout }}
    register: docker_logs
    failed_when: true
    when: containerID is defined and containerID|success and containerID.stdout is defined and containerID.stdout != ""

  - name: fail if {{ item }} pod is not running
    fail:
      msg: "Timed out waiting for {{ item }} pod to be running."
    when: phase|failure or "Running" not in phase.stdout
