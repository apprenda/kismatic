---
  # install and start etcd service
  - name: copy {{ etcd_service_file }} to remote
    template:
      src: "{{ etcd_service_template_name }}"
      dest: "{{ etcd_service_path }}"
      owner: "{{ etcd_service_owner }}"
      group: "{{ etcd_service_group }}"
      mode: "{{ etcd_service_mode }}"
    notify:
      - reload services
      - enable etcd
      - start etcd service

  # force_etcd_restart=true to force restart
  - name: force restart etcd
    command: /bin/true
    notify:
      - enable etcd
      - restart etcd service
    when: force_etcd_restart is defined and force_etcd_restart|bool == true

  - meta: flush_handlers  #Run handlers

  # test etcd
  - name: verify {{ etcd_install_bin_name }} cluster health
    command: "{{ bin_dir }}/{{ etcdctl_install_bin_name }} --endpoint='https://127.0.0.1:{{ etcd_service_client_port }}/' --cert-file={{ etcd_certificates_cert_file }} --key-file={{ etcd_certificates_key_file }} --ca-file={{ etcd_certificates_ca_file }} cluster-health"
    register: result
    until: result|success
    retries: 3
    delay: 5
  - debug: msg="{{ bin_dir }}/{{ etcdctl_install_bin_name }} --endpoint='https://127.0.0.1:{{ etcd_service_client_port }}/' --cert-file={{ etcd_certificates_cert_file }} --key-file={{ etcd_certificates_key_file }} --ca-file={{ etcd_certificates_ca_file }} cluster-health"
