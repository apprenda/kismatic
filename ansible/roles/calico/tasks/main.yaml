---
  - name: create /etc/calico directory
    file:
      path: "{{ calico_dir }}"
      state: directory

  - name: copy calicoctl.cfg to remote
    template:
      src: calicoctl.cfg.j2
      dest: "{{ calicoctl_conf_path }}"
      owner: "{{ kubernetes_owner }}"
      group: "{{ kubernetes_group }}"
      mode: "{{ network_environment_mode }}"

  - name: copy calico.yaml manifest
    template:
      src: calico.yaml
      dest: /etc/calico/calico.yaml
      owner: "{{ kubernetes_owner }}"
      group: "{{ kubernetes_group }}"
      mode: "{{ kubernetes_service_mode }}"

  - name: run calico containers
    command: kubectl apply -f /etc/calico/calico.yaml
    run_once: true
    register: result
    until: result|success
    retries: 10
    delay: 6

  - name: get desired number of calico pods
    command: kubectl get ds calico-node -o=jsonpath='{.status.desiredNumberScheduled}' --namespace=kube-system
    register: desiredPods
    run_once: true

  - name: wait until all calico pods are ready
    command: kubectl get ds calico-node -o=jsonpath='{.status.numberReady}' --namespace=kube-system
    register: readyPods
    until: desiredPods.stdout|int == readyPods.stdout|int
    retries: 10
    delay: 6
    run_once: true
