---
  - name: get a list of kube-apiserver pods
    command: kubectl get pods --namespace kube-system -l component=kube-apiserver -o jsonpath='{.items[*].metadata.name}'
    register: apiserverpods
    until: apiserverpods|success
    retries: 10
    delay: 6
  - name: validate all kube-apiserver pods are running
    command: kubectl get pods {{ item }} --namespace kube-system -o jsonpath='{.status.phase}'
    with_items: "{{ apiserverpods.stdout.split(' ') }}"
    register: phase
    until: phase|success and phase.stdout=="Running"
    retries: 1
    delay: 6

  - name: get a list of kube-scheduler pods
    command: kubectl get pods --namespace kube-system -l component=kube-scheduler -o jsonpath='{.items[*].metadata.name}'
    register: schedulerpods
    until: schedulerpods|success
    retries: 10
    delay: 6
  - name: validate all kube-scheduler pods are running
    command: kubectl get pods {{ item }} --namespace kube-system -o jsonpath='{.status.phase}'
    with_items: "{{ schedulerpods.stdout.split(' ') }}"
    register: phase
    until: phase|success and phase.stdout=="Running"
    retries: 10
    delay: 6

  - name: get a list of kube-controller-manager pods
    command: kubectl get pods --namespace kube-system -l component=kube-controller-manager -o jsonpath='{.items[*].metadata.name}'
    register: controllermanagerpods
    until: controllermanagerpods|success
    retries: 10
    delay: 6
  - name: validate all kube-controller-manager pods are running
    command: kubectl get pods {{ item }} --namespace kube-system -o jsonpath='{.status.phase}'
    with_items: "{{ controllermanagerpods.stdout.split(' ') }}"
    register: phase
    until: phase|success and phase.stdout=="Running"
    retries: 10
    delay: 6

  - name: get a list of kube-proxy pods
    command: kubectl get pods --namespace kube-system -l component=kube-proxy -o jsonpath='{.items[*].metadata.name}'
    register: proxypods
    until: proxypods|success
    retries: 10
    delay: 6
  - name: validate all kube-proxy pods are running
    command: kubectl get pods {{ item }} --namespace kube-system -o jsonpath='{.status.phase}'
    with_items: "{{ proxypods.stdout.split(' ') }}"
    register: phase
    until: phase|success and phase.stdout=="Running"
    retries: 10
    delay: 6
