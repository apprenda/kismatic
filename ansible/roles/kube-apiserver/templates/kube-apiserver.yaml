apiVersion: v1
kind: Pod
metadata:
  labels:
    tier: control-plane
    component: kube-apiserver
  annotations:
    version: "{{ kubernetes_version }}"
    kismatic/version: "{{ kismatic_short_version }}"
  name: kube-apiserver
  namespace: kube-system
spec:
  hostNetwork: true
  containers:
  - name: kube-apiserver
    image: {{ kube_apiserver_img }}
    imagePullPolicy: IfNotPresent
    command:
      - kube-apiserver
{% set combined_config = kubernetes_api_server_config_defaults | combine(kubernetes_api_server_config_overrides) -%}
{% for config_item in combined_config | dictsort %}
{% if config_item[1] is defined and config_item[1] | length > 0 %}
      - --{{ config_item[0] }}={{ config_item[1] }}
{% endif %}
{% endfor -%}
    ports:
    - containerPort: "{{ kubernetes_master_secure_port }}"
      hostPort: "{{ kubernetes_master_secure_port }}"
      name: https
    - containerPort: "{{ kubernetes_master_insecure_port }}"
      hostPort: "{{ kubernetes_master_insecure_port }}"
      name: local
    volumeMounts:
    - mountPath: /etc/kubernetes
      name: ssl-certs-kubernetes
      readOnly: true
    - mountPath: /etc/ssl/certs
      name: ssl-certs-host
      readOnly: true
    livenessProbe:
      httpGet:
        host: 127.0.0.1
        path: /healthz
        port: 8080
      initialDelaySeconds: 15
      timeoutSeconds: 15
      failureThreshold: 8
  volumes:
  - hostPath:
      path: /etc/kubernetes
    name: ssl-certs-kubernetes
  - hostPath:
      path: /usr/share/ca-certificates
    name: ssl-certs-host
