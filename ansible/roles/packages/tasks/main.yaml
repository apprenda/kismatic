---
  # YUM repo
  - name: ping Kismatic yum repository
    uri: url="{{ yum_gpg_key_url }}"
    when: ansible_os_family == 'RedHat'
    ignore_errors: yes
    register: result
    until: "result.status is defined and result.status == 200"
    retries: 3
    delay: 1
    changed_when: "result.status is defined and result.status == 200"

  # only configure repository if it is reachable
  - name: add Kismatic yum repository
    yum_repository:
      name: kismatic
      description: Kismatic Packages
      baseurl: "{{ yum_repository_url }}"
      gpgkey: "{{ yum_gpg_key_url }}"
      gpgcheck: yes
    when: ansible_os_family == 'RedHat' and result.status is defined and result.status == 200
  - name: clean Kismatic yum cache
    command: 'yum --enablerepo=kismatic clean metadata'
    when: ansible_os_family == 'RedHat' and result.status is defined and result.status == 200

  # DEB repo
  - name: ping Kismatic deb repository
    uri: url="{{ deb_gpg_key_url }}"
    when: ansible_os_family == 'Debian'
    ignore_errors: yes
    register: result
    until: "result.status is defined and result.status == 200"
    retries: 3
    delay: 1
    changed_when: "result.status is defined and result.status == 200"

  # only configure repository if it is reachable
  - name: install apt-transport-https package
    apt:
      name: apt-transport-https
      state: latest
      update_cache: yes
    when: ansible_os_family == 'Debian' and result.status is defined and result.status == 200
  - name: add Kismatic deb key
    apt_key:
      url: "{{ deb_gpg_key_url }}"
      validate_certs: no
    when: ansible_os_family == 'Debian' and result.status is defined and result.status == 200
  - name: add Kismatic deb repository
    apt_repository:
      repo: 'deb {{ deb_repository_url }} xenial main'
      validate_certs: no
    when: ansible_os_family == 'Debian' and result.status is defined and result.status == 200
  - name: apt-get update
    apt:
      update_cache: yes
    when: ansible_os_family == 'Debian' and result.status is defined and result.status == 200

  # install packages
  - name: install yum packages
    command: /bin/true
    notify:
      - install etcd yum package
      - install kubernetes master yum package
      - install kubernetes node yum package
    when: ansible_os_family == 'RedHat'

  - name: install deb packages
    command: /bin/true
    notify:
      - install etcd deb package
      - install docker-engine deb package
      - install kubernetes networking deb package
      - install kubernetes node deb package
      - install kubernetes master deb package
    when: ansible_os_family == 'Debian'
