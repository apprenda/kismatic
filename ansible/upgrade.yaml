---
    # TODO: Is this OK???
  - include: _packages.yaml
    when: allow_package_installation|bool == true

  - name: Upgrade Kubernetes etcd cluster
    hosts: etcd
    serial: 1
    any_errors_fatal: true
    remote_user: root
    become_method: sudo
    vars_files:
      - group_vars/all.yaml
      - group_vars/etcd-k8s.yaml
    roles:
      - etcd

  - name: Upgrade Networking etcd cluster
    hosts: etcd
    serial: 1
    any_errors_fatal: true
    remote_user: root
    become_method: sudo
    vars_files:
      - group_vars/all.yaml
      - group_vars/etcd-networking.yaml
    roles:
      - etcd-cert
      - etcd

  - name: Upgrade Kubernetes API server
    hosts: master
    serial: 1
    any_errors_fatal: true
    remote_user: root
    become_method: sudo
    vars_files:
      - group_vars/all.yaml
    roles:
      - authorization-policy
      - apiserver

  - name: Upgrade Kubernetes Scheduler
    hosts: master
    serial: 1
    any_errors_fatal: true
    remote_user: root
    become_method: sudo
    vars_files:
      - group_vars/all.yaml
    roles:
      - kubeconfig
      - scheduler

  - name: Upgrade Kubernetes Controller Manager
    hosts: master
    serial: 1
    any_errors_fatal: true
    remote_user: root
    become_method: sudo
    vars_files:
      - group_vars/all.yaml
    roles:
      - kubeconfig
      - controller-manager

  - name: Upgrade Internal Docker Registry
    hosts: master[0]
    remote_user: root
    become_method: sudo
    roles:
      - role: docker-registry-container
        when: setup_internal_docker_registry|bool == true


  - name: Load Docker Images Into Private Registry
    hosts: master[0]
    remote_user: root
    become_method: sudo
    roles:
      - role: docker-registry-images
        when: use_private_docker_registry|bool == true and disconnected_installation|bool == true


  - name: Upgrade Docker
    hosts: master:worker:ingress:storage
    any_errors_fatal: true
    remote_user: root
    become_method: sudo
    vars_files:
      - group_vars/all.yaml
    roles:
      - role: docker
      - role: docker-registry-cert
        when: use_private_docker_registry is defined and use_private_docker_registry|bool == true

  - name: Upgrade Cluster Network
    hosts: master:worker:ingress:storage
    any_errors_fatal: true
    remote_user: root
    become_method: sudo
    vars_files:
      - group_vars/all.yaml
    roles:
      - kubeconfig
      - calico

  - name: Upgrade Kubelet
    hosts: master:worker:ingress:storage
    serial: 1
    any_errors_fatal: true
    remote_user: root
    become_method: sudo
    vars_files:
      - group_vars/all.yaml
    roles:
      - kubeconfig
      - kubelet

  - name: Upgrade Kubernetes Proxy
    hosts: master:worker:ingress:storage
    serial: 1
    any_errors_fatal: true
    remote_user: root
    become_method: sudo
    vars_files:
      - group_vars/all.yaml
    roles:
      - kubeconfig
      - proxy

  - include: _update-version.yaml

# ---------- CLUSTER LEVEL WORK ----------- #

  - name: Upgrade Cluster DNS
    hosts: master[0]
    any_errors_fatal: true
    remote_user: root
    become_method: sudo
    run_once: true
    roles:
      - addon-kubernetes-dns

  - name: Upgrade Ingress controller
    hosts: master[0]
    any_errors_fatal: true
    remote_user: root
    become_method: sudo
    run_once: true
    roles:
      - addon-kubernetes-ingress

  - name: Upgrade Kubernetes Dashboard
    hosts: master[0]
    any_errors_fatal: true
    remote_user: root
    become_method: sudo
    run_once: true
    roles:
      - addon-kubernetes-dashboard

  #
  # # Contains list of playbooks to setup a HA enterprise ready kubernetes cluster
  # - include: _all.yaml
  # - include: _packages.yaml
  #   when: allow_package_installation|bool == true
  # - include: _hosts.yaml
  #   when: modify_hosts_file|bool == true
  # # etcd
  # - include: _etcd-k8s.yaml
  # - include: _etcd-networking.yaml
  # # common prereqs
  # - include: _docker.yaml
  # - include: _docker-registry-container.yaml
  #   when: setup_internal_docker_registry|bool == true
  # - include: _docker-registry-images.yaml
  #   when: use_private_docker_registry|bool == true
  # - include: _kubenode-cert.yaml
  # # master:worker:ingress
  # - include: _calico.yaml
  # # master
  # - include: _apiserver.yaml
  # - include: _scheduler.yaml
  # - include: _controller-manager.yaml
  # - include: _kubelet.yaml
  # # master:worker:ingress
  # - include: _proxy.yaml
  # - include: _storage.yaml
  #   when: configure_storage|bool == true
  # - include: _update-version.yaml
  # # ----- CLUSTER LEVEL WORK -----
  # # add ons
  # - include: _addon-network-policy.yaml
  #   when: enable_calico_policy|bool == true
  # - include: _addon-kubernetes-dns.yaml
  # - include: _addon-kubernetes-ingress.yaml
  #   when: configure_ingress|bool == true
  # - include: _addon-kubernetes-dashboard.yaml
  # - include: _addon-nfs-volumes.yaml
  #   when: nfs_volumes|length > 0
